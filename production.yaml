version: "3"

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_caddy: {}

services:
  django: &django
    build:
      context: .
      dockerfile: compose/production/tornado/Dockerfile
    image: app_production_django
    depends_on:
      - mysql
      - redis
    env_file:
      - ./.envs/.production/.tornado
      - ./.envs/.production/.mysql
    ports:
      - "0.0.0.0:8000:5000"
    command: /start

  mysql:
    image: mysql:5.7
    volumes:
      - local_mysql_data:/var/lib/mysql
    env_file:
      - .envs/.local/.mysql
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"

  proxy:
    build:
      context: .
      dockerfile: ./compose/production/shadowsocks/Dockerfile
    image: app_production_proxy
    env_file:
      - ./.envs/.production/.shadowsocks
    command: /start

  redis:
    image: redis:3.2

  celeryworker:
    <<: *django
    image: app_production_celeryworker
    depends_on:
      - redis
      - postgres
      - proxy
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: app_production_celerybeat
    depends_on:
      - redis
      - postgres
      - proxy
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: app_production_flower
    ports:
      - "5555:5555"
    command: /start-flower
